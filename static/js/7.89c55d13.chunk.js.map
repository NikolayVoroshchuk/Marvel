{"version":3,"sources":["components/comicsList/ComicsList.jsx","pages/ComicsPage.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["setContent","process","Component","newItemLoading","Spinner","ErrorMessage","Error","ComicsList","useState","comicsList","setComicsList","setNewItemLoading","offset","setOffset","comicEnded","setComicEnded","useMarvelService","getAllComics","setProcess","useEffect","onRequest","initial","then","onComicListLoaded","newComicsList","ended","length","className","arr","map","item","i","to","id","src","thumbnail","alt","title","price","disabled","style","display","onClick","ComicsPage","Helmet","name","content","AppBanner","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"mappings":"+MAUMA,EAAa,SAACC,EAASC,EAAWC,GACpC,OAAQF,GACJ,IAAK,UACD,OAAO,cAACG,EAAA,EAAD,IAEX,IAAK,UACD,OAAOD,EAAiB,cAACD,EAAD,IAAgB,cAACE,EAAA,EAAD,IAE5C,IAAK,YACD,OAAO,cAACF,EAAD,IAEX,IAAK,QACD,OAAO,cAACG,EAAA,EAAD,IAEX,QACI,MAAM,IAAIC,MAAM,8BAoEbC,EAhEI,WAEf,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4CF,oBAAS,GAArD,mBAAOL,EAAP,KAAuBQ,EAAvB,KACA,EAA4BH,mBAAS,KAArC,mBAAOI,EAAP,KAAeC,EAAf,KACA,EAAoCL,oBAAS,GAA7C,mBAAOM,EAAP,KAAmBC,EAAnB,KAEA,EAA8CC,cAAtCC,EAAR,EAAQA,aAAchB,EAAtB,EAAsBA,QAASiB,EAA/B,EAA+BA,WAE/BC,qBAAU,WACNC,EAAUR,GAAQ,KAEnB,IAEH,IAAMQ,EAAY,SAACR,EAAQS,GACbV,GAAVU,GACAJ,EAAaL,GACRU,KAAKC,GACLD,MAAK,kBAAMJ,EAAW,iBAGzBK,EAAoB,SAACC,GACvB,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACvBD,GAAQ,GAGZf,GAAc,SAAAD,GAAU,4BAAQA,GAAR,YAAuBe,OAC/Cb,GAAkB,GAClBE,EAAUD,EAAS,GACnBG,EAAcU,IAoBlB,OACI,sBAAKE,UAAU,qBAAf,UACK3B,EAAWC,GAAS,kBAnBR2B,EAmB0BnB,EAjBvC,oBAAIkB,UAAU,eAAd,SACKC,EAAIC,KAAI,SAACC,EAAMC,GAAP,OACJ,qBAAIJ,UAAU,qBAAd,UACG,eAAC,IAAD,CAAMK,GAAE,kBAAaF,EAAKG,IAA1B,UACI,qBAAKC,IAAKJ,EAAKK,UAAWC,IAAKN,EAAKO,QACpC,qBAAKV,UAAU,qBAAf,SAAqCG,EAAKO,WAE9C,qBAAKV,UAAU,gBAAf,SAAgCG,EAAKQ,UALAP,QAJzD,IAAqBH,IAmBuCzB,GACpD,wBACIwB,UAAU,mCACVY,SAAUpC,EACVqC,MAAO,CAAEC,QAAS3B,EAAa,OAAS,SACxC4B,QAAS,kBAAMtB,EAAUR,IAJ7B,SAKI,qBAAKe,UAAU,QAAf,6B,QCpEDgB,UAdI,WACf,OACI,qCACI,eAACC,EAAA,EAAD,WACI,sBAAMC,KAAK,cAAcC,QAAQ,iCACjC,mDAEJ,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,S,wFCTG,SAASC,EAAmBpB,GACzC,OCJa,SAA4BA,GACzC,GAAIqB,MAAMC,QAAQtB,GAAM,OAAO,OAAAuB,EAAA,GAAiBvB,GDGzC,CAAkBA,IELZ,SAA0BwB,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBxB,IAAQ,OAAA4B,EAAA,GAA2B5B,IGLvE,WACb,MAAM,IAAI6B,UAAU,wIHIwE","file":"static/js/7.89c55d13.chunk.js","sourcesContent":["/* eslint-disable no-unreachable */\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner />;\n            break;\n        case 'loading':\n            return newItemLoading ? <Component /> : <Spinner />;\n            break;\n        case 'confirmed':\n            return <Component />;\n            break;\n        case 'error':\n            return <ErrorMessage />;\n            break;\n        default:\n            throw new Error('Unexpected process state');\n    }\n}\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [comicEnded, setComicEnded] = useState(false);\n\n    const { getAllComics, process, setProcess } = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicListLoaded)\n            .then(() => setProcess('confirmed'))\n    }\n\n    const onComicListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset + 8);\n        setComicEnded(ended)\n    }\n\n    function renderItems(arr) {\n        return (\n            <ul className=\"comics__flex\">\n                {arr.map((item, i) => (\n                     <li className=\"comics__comicsitem\" key={i}>\n                        <Link to={`/comics/${item.id}`}>\n                            <img src={item.thumbnail} alt={item.title} />\n                            <div className=\"comics__comicsname\">{item.title}</div>\n                        </Link>\n                        <div className=\"comics__price\">{item.price}</div>\n                    </li >\n                ))}\n            </ul>\n\n        )\n    }\n\n    return (\n        <div className=\"comics__comicslist\">\n            {setContent(process, () => renderItems(comicsList), newItemLoading)}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{ display: comicEnded ? 'none' : 'block' }}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from 'react-helmet';\n\nimport ComicsList from \"../components/comicsList/ComicsList\";\nimport AppBanner from \"../components/appBanner/AppBanner\";\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <Helmet>\n                <meta name=\"description\" content=\"Page with list of our comics\" />\n                <title>Comics Page</title>\n            </Helmet>\n            <AppBanner />\n            <ComicsList />\n        </>\n\n    )\n}\n\nexport default ComicsPage;","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}