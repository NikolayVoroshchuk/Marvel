{"version":3,"sources":["pages/SinglePage.jsx","components/skeleton/Skeleton.jsx","utils/setContent.jsx"],"names":["SinglePage","Component","dataType","id","useParams","useState","data","setData","useMarvelService","getComics","getCharacter","clearError","process","setProcess","useEffect","updateData","then","onDataLoaded","setContent","Skeleton","className","Spinner","ErrorMessage","Error"],"mappings":"iKAwCeA,UAhCI,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SACrBC,EAAOC,cAAPD,GACR,EAAwBE,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAqEC,cAA7DC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aAAcC,EAAjC,EAAiCA,WAAYC,EAA7C,EAA6CA,QAASC,EAAtD,EAAsDA,WAEtDC,qBAAU,WACNC,MAED,CAACZ,IAEJ,IAAMY,EAAa,WAGf,OAFAJ,IAEQT,GACJ,IAAK,SACDO,EAAUN,GAAIa,KAAKC,GAAcD,MAAK,kBAAMH,EAAW,gBACvD,MACJ,IAAK,YACDH,EAAaP,GAAIa,KAAKC,GAAcD,MAAK,kBAAMH,EAAW,kBAIhEI,EAAe,SAACX,GAAD,OAAUC,EAAQD,IAEvC,OACI,qCACI,cAAC,IAAD,IACCY,YAAWN,EAASX,EAAWK,Q,kEChB7Ba,EAjBE,WACb,OACI,qCACI,mBAAGC,UAAU,eAAb,0DACA,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,iCCMhBF,IAfI,SAACN,EAASX,EAAWK,GACpC,OAAQM,GACJ,IAAK,UACD,OAAO,cAAC,EAAD,IACX,IAAK,UACD,OAAO,cAACS,EAAA,EAAD,IACX,IAAK,YACD,OAAO,cAACpB,EAAD,CAAWK,KAAMA,IAC5B,IAAK,QACD,OAAO,cAACgB,EAAA,EAAD,IACX,QACI,MAAM,IAAIC,MAAM,+B","file":"static/js/8.56ceff1e.chunk.js","sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport useMarvelService from '../services/MarvelService';\nimport AppBanner from '../components/appBanner/AppBanner';\nimport setContent from '../utils/setContent';\n\n\nconst SinglePage = ({ Component, dataType }) => {\n    const { id } = useParams();\n    const [data, setData] = useState(null);\n    const { getComics, getCharacter, clearError, process, setProcess } = useMarvelService();\n\n    useEffect(() => {\n        updateData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [id])\n\n    const updateData = () => {\n        clearError();\n        // eslint-disable-next-line default-case\n        switch (dataType) {\n            case 'comics':\n                getComics(id).then(onDataLoaded).then(() => setProcess('confirmed'));\n                break;\n            case 'character':\n                getCharacter(id).then(onDataLoaded).then(() => setProcess('confirmed'));\n        }\n    }\n\n    const onDataLoaded = (data) => setData(data);\n\n    return (\n        <>\n            <AppBanner />\n            {setContent(process, Component, data)}\n        </>\n    )\n}\n\nexport default SinglePage;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\nimport Skeleton from '../components/skeleton/Skeleton'\n\nconst setContent = (process, Component, data) => {\n    switch (process) {\n        case 'waiting':\n            return <Skeleton />;\n        case 'loading':\n            return <Spinner />;\n        case 'confirmed':\n            return <Component data={data} />;\n        case 'error':\n            return <ErrorMessage />;\n        default:\n            throw new Error('Unexpected process state');\n    }\n}\n\nexport default setContent;"],"sourceRoot":""}